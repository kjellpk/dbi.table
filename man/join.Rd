% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{join}
\alias{join}
\title{Join dbi.tables}
\usage{
join(
  x,
  y,
  type = "inner",
  on = NULL,
  envir = parent.frame(),
  prefixes = c("x.", "y.")
)
}
\arguments{
\item{x, y}{\code{\link{dbi.table}}s to join. \code{x} and \code{y} must
reference objects on the same \code{\link[DBI]{DBI}} connection.}

\item{type}{a character string. Valid choices are \code{"inner"},
\code{"left"}, \code{"right"}, \code{"outer"},
and \code{"cross"}.}

\item{on}{a \code{\link[base]{call}} to translate to the \code{SQL} \code{ON}
clause.}

\item{envir}{an environment, \code{on} is partially evaluated in \code{envir}
when this funcion is evaluated (i.e., not when the join is
translated to \code{SQL}.)}

\item{prefixes}{a 2-element character vector. When \code{x} and \code{y}
both have a column with the same name, prefixes are used to
eliminate the ambiguity.}
}
\description{
Perform a \code{SQL}-like join on two \code{\link{dbi.table}}s
             that share the same underlying \code{\link[DBI]{DBI}}
             connection. All columns of both \code{\link{dbi.table}}s are
             returned.
}
