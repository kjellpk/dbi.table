% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBI_methods.R
\docType{methods}
\name{dbi.table.DBI}
\alias{dbi.table.DBI}
\alias{dbAppendTable,dbi.catalog-method}
\alias{dbAppendTable,dbi.schema-method}
\alias{dbAppendTable,dbi.table-method}
\alias{dbCreateTable,dbi.catalog-method}
\alias{dbCreateTable,dbi.schema-method}
\alias{dbCreateTable,dbi.table-method}
\alias{dbExecute,dbi.catalog,ANY-method}
\alias{dbExecute,dbi.catalog-method}
\alias{dbExecute,dbi.schema,ANY-method}
\alias{dbExecute,dbi.schema-method}
\alias{dbExecute,dbi.table,ANY-method}
\alias{dbExecute,dbi.table-method}
\alias{dbGetInfo,dbi.catalog-method}
\alias{dbGetInfo,dbi.schema-method}
\alias{dbGetInfo,dbi.table-method}
\alias{dbGetQuery,dbi.table,missing-method}
\alias{dbGetQuery,dbi.catalog,ANY-method}
\alias{dbGetQuery,dbi.catalog-method}
\alias{dbGetQuery,dbi.schema,ANY-method}
\alias{dbGetQuery,dbi.schema-method}
\alias{dbGetQuery,dbi.table,ANY-method}
\alias{dbGetQuery,dbi.table-method}
\alias{dbListFields,dbi.catalog,ANY-method}
\alias{dbListFields,dbi.catalog-method}
\alias{dbListFields,dbi.schema,ANY-method}
\alias{dbListFields,dbi.schema-method}
\alias{dbListFields,dbi.table,ANY-method}
\alias{dbListFields,dbi.table-method}
\alias{dbListObjects,dbi.catalog-method}
\alias{dbListObjects,dbi.schema-method}
\alias{dbListObjects,dbi.table-method}
\alias{dbQuoteIdentifier,dbi.catalog,ANY-method}
\alias{dbQuoteIdentifier,dbi.catalog-method}
\alias{dbQuoteIdentifier,dbi.schema,ANY-method}
\alias{dbQuoteIdentifier,dbi.schema-method}
\alias{dbQuoteIdentifier,dbi.table,ANY-method}
\alias{dbQuoteIdentifier,dbi.table-method}
\alias{dbQuoteLiteral,dbi.catalog-method}
\alias{dbQuoteLiteral,dbi.schema-method}
\alias{dbQuoteLiteral,dbi.table-method}
\alias{dbQuoteString,dbi.catalog,ANY-method}
\alias{dbQuoteString,dbi.catalog-method}
\alias{dbQuoteString,dbi.schema,ANY-method}
\alias{dbQuoteString,dbi.schema-method}
\alias{dbQuoteString,dbi.table,ANY-method}
\alias{dbQuoteString,dbi.table-method}
\alias{dbReadTable,dbi.catalog,ANY-method}
\alias{dbReadTable,dbi.catalog-method}
\alias{dbReadTable,dbi.schema,ANY-method}
\alias{dbReadTable,dbi.schema-method}
\alias{dbReadTable,dbi.table,ANY-method}
\alias{dbReadTable,dbi.table-method}
\alias{dbRemoveTable,dbi.catalog,ANY-method}
\alias{dbRemoveTable,dbi.catalog-method}
\alias{dbRemoveTable,dbi.schema,ANY-method}
\alias{dbRemoveTable,dbi.schema-method}
\alias{dbRemoveTable,dbi.table,ANY-method}
\alias{dbRemoveTable,dbi.table-method}
\alias{dbSendStatement,dbi.table,missing-method}
\alias{dbSendStatement,dbi.catalog,ANY-method}
\alias{dbSendStatement,dbi.catalog-method}
\alias{dbSendStatement,dbi.schema,ANY-method}
\alias{dbSendStatement,dbi.schema-method}
\alias{dbSendStatement,dbi.table,ANY-method}
\alias{dbSendStatement,dbi.table-method}
\alias{dbWithTransaction,dbi.catalog-method}
\alias{dbWithTransaction,dbi.schema-method}
\alias{dbWithTransaction,dbi.table-method}
\alias{dbWriteTable,dbi.catalog,ANY-method}
\alias{dbWriteTable,dbi.catalog-method}
\alias{dbWriteTable,dbi.schema,ANY-method}
\alias{dbWriteTable,dbi.schema-method}
\alias{dbWriteTable,dbi.table,ANY-method}
\alias{dbWriteTable,dbi.table-method}
\title{DBI Methods for \code{dbi.table}s}
\usage{
\S4method{dbAppendTable}{dbi.catalog}(conn, name, value, ..., row.names = NULL)

\S4method{dbAppendTable}{dbi.schema}(conn, name, value, ..., row.names = NULL)

\S4method{dbAppendTable}{dbi.table}(conn, name, value, ..., row.names = NULL)

\S4method{dbCreateTable}{dbi.catalog}(conn, name, fields, ..., row.names = NULL, temporary = FALSE)

\S4method{dbCreateTable}{dbi.schema}(conn, name, fields, ..., row.names = NULL, temporary = FALSE)

\S4method{dbCreateTable}{dbi.table}(conn, name, fields, ..., row.names = NULL, temporary = FALSE)

\S4method{dbExecute}{dbi.catalog,ANY}(conn, statement, ...)

\S4method{dbExecute}{dbi.schema,ANY}(conn, statement, ...)

\S4method{dbExecute}{dbi.table,ANY}(conn, statement, ...)

\S4method{dbGetInfo}{dbi.catalog}(dbObj, ...)

\S4method{dbGetInfo}{dbi.schema}(dbObj, ...)

\S4method{dbGetInfo}{dbi.table}(dbObj, ...)

\S4method{dbGetQuery}{dbi.table,missing}(conn, statement, ...)

\S4method{dbGetQuery}{dbi.catalog,ANY}(conn, statement, ...)

\S4method{dbGetQuery}{dbi.schema,ANY}(conn, statement, ...)

\S4method{dbGetQuery}{dbi.table,ANY}(conn, statement, ...)

\S4method{dbListFields}{dbi.catalog,ANY}(conn, name, ...)

\S4method{dbListFields}{dbi.schema,ANY}(conn, name, ...)

\S4method{dbListFields}{dbi.table,ANY}(conn, name, ...)

\S4method{dbListObjects}{dbi.catalog}(conn, prefix = NULL, ...)

\S4method{dbListObjects}{dbi.schema}(conn, prefix = NULL, ...)

\S4method{dbListObjects}{dbi.table}(conn, prefix = NULL, ...)

\S4method{dbQuoteIdentifier}{dbi.catalog,ANY}(conn, x, ...)

\S4method{dbQuoteIdentifier}{dbi.schema,ANY}(conn, x, ...)

\S4method{dbQuoteIdentifier}{dbi.table,ANY}(conn, x, ...)

\S4method{dbQuoteLiteral}{dbi.catalog}(conn, x, ...)

\S4method{dbQuoteLiteral}{dbi.schema}(conn, x, ...)

\S4method{dbQuoteLiteral}{dbi.table}(conn, x, ...)

\S4method{dbQuoteString}{dbi.catalog,ANY}(conn, x, ...)

\S4method{dbQuoteString}{dbi.schema,ANY}(conn, x, ...)

\S4method{dbQuoteString}{dbi.table,ANY}(conn, x, ...)

\S4method{dbReadTable}{dbi.catalog,ANY}(conn, name, ...)

\S4method{dbReadTable}{dbi.schema,ANY}(conn, name, ...)

\S4method{dbReadTable}{dbi.table,ANY}(conn, name, ...)

\S4method{dbRemoveTable}{dbi.catalog,ANY}(conn, name, ...)

\S4method{dbRemoveTable}{dbi.schema,ANY}(conn, name, ...)

\S4method{dbRemoveTable}{dbi.table,ANY}(conn, name, ...)

\S4method{dbSendStatement}{dbi.table,missing}(conn, statement, ...)

\S4method{dbSendStatement}{dbi.catalog,ANY}(conn, statement, ...)

\S4method{dbSendStatement}{dbi.schema,ANY}(conn, statement, ...)

\S4method{dbSendStatement}{dbi.table,ANY}(conn, statement, ...)

\S4method{dbWithTransaction}{dbi.catalog}(conn, code, ...)

\S4method{dbWithTransaction}{dbi.schema}(conn, code, ...)

\S4method{dbWithTransaction}{dbi.table}(conn, code, ...)

\S4method{dbWriteTable}{dbi.catalog,ANY}(conn, name, value, ...)

\S4method{dbWriteTable}{dbi.schema,ANY}(conn, name, value, ...)

\S4method{dbWriteTable}{dbi.table,ANY}(conn, name, value, ...)
}
\arguments{
\item{conn}{A \code{\link{dbi.catalog}}, \code{dbi.schema}, or \code{\link{dbi.table}}.}

\item{name}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{value}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{\dots}{Additional parameters to pass to methods.}

\item{row.names}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{fields}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{temporary}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{statement}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{dbObj}{A \code{\link{dbi.catalog}}, \code{dbi.schema}, or \code{\link{dbi.table}}.}

\item{prefix}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{x}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}

\item{code}{Please refer to the documentation for the generic function (links can be
found in the 'See Also' section).}
}
\description{
Call DBI methods using the underlying DBI connection.
}
\seealso{
\code{\link[DBI]{dbAppendTable}},
  \code{\link[DBI]{dbCreateTable}},
  \code{\link[DBI]{dbExecute}},
  \code{\link[DBI]{dbGetInfo}},
  \code{\link[DBI]{dbGetQuery}},
  \code{\link[DBI]{dbListObjects}},
  \code{\link[DBI]{dbReadTable}},
  \code{\link[DBI]{dbQuoteIdentifier}},
  \code{\link[DBI]{dbQuoteLiteral}},
  \code{\link[DBI]{dbQuoteString}},
  \code{\link[DBI]{dbRemoveTable}},
  \code{\link[DBI]{dbSendStatement}},
  \code{\link[DBI]{dbWithTransaction}}
}
